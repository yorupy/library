/*
  Josh's Custom CSS Reset
  https://www.joshwcomeau.com/css/custom-css-reset/
*/

*,
*::before,
*::after {
    box-sizing: border-box;
}

* {
    margin: 0;
    padding: 0;
}

body {
    line-height: 1.5;
    -webkit-font-smoothing: antialiased;
}

img,
picture,
video,
canvas,
svg {
    display: block;
    max-width: 100%;
}

input,
button,
textarea,
select {
    font: inherit;
}

p,
h1,
h2,
h3,
h4,
h5,
h6 {
    overflow-wrap: break-word;
}

p {
    text-wrap: pretty;
}

h1,
h2,
h3,
h4,
h5,
h6 {
    text-wrap: balance;
}

/* My rules */

:root {
    --mangadex-orange: #FF6740;
    --mangadex-orange-darker: #dc5838;
    --mangadex-orange-darkest: #b9472b;
    --sidebar-silver: #F0F1F2;
}

body {
    min-height: 100vh;
    font-family: "Poppins", sans-serif;
    display: grid;
    grid-template-columns: 16rem 1fr;
    overflow-y: scroll;
}

header {
    padding: 0.5rem 1rem 1rem;
    background-color: var(--sidebar-silver);
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.logo {
    display: flex;
    align-items: center;
    gap: 0.3rem;
}

.logo h1 {
    font-size: 1.6rem;
    letter-spacing: -0.07rem;
    font-family: "League Spartan";
}

nav ul {
    list-style: none;
    display: flex;
    flex-direction: column;
    font-weight: bold;
}

nav a {
    color: inherit;
    text-decoration: none;
    display: block;
}

nav a:visited,
nav a:link {
    color: inherit;
}

nav button {
    border: none;
}

nav button,
nav a {
    width: 100%;
    text-align: start;
    padding: 0.2rem 0.7rem;
    cursor: pointer;
    background-color: inherit;
    border-radius: 5px;
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

nav a.selected,
nav button.selected {
    background-color: var(--mangadex-orange);
    color: white;
}

main {
    display: flex;
    flex-direction: column;
    padding: 0.5rem 1.5rem 1rem 1rem;
    z-index: 1;
    box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;
}

.navbar {
    display: flex;
    align-items: center;
    gap: 0.7rem;
}

.navbar p {
    flex-grow: 1;
    background-color: var(--mangadex-orange);
    text-align: center;
    color: white;
    font-weight: bold;
    border-radius: 10px;
    padding: 0.3rem 0;
    opacity: 0.75;
    box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;
}

.navbar .right {
    display: flex;
    align-items: center;
    gap: 1rem;
}

.navbar img {
    width: 2.5rem;
    height: auto;
    border-radius: 100%;
}

.search-bar {
    position: relative;
    display: flex;
    align-items: center;
}

.right input {
    padding: 0.3rem 1rem;
    background-color: #F0F1F2;
    border-radius: 10px;
    border: none;
}

.search-bar .search-icon {
    position: absolute;
    width: 1rem;
    height: auto;
    right: 1rem;
}

.right input::placeholder {
    color: black;
}

.selected img {
    filter: invert(1);
}

main h2 {
    font-family: "League Spartan", sans-serif;
    margin-top: 1rem;
    margin-bottom: 1rem;
    font-size: 2rem;
    font-weight: 500;
}

.filters {
    display: flex;
    font-weight: bold;
    background-color: #F0F1F2;
    width: max-content;
    padding: 0.3rem;
    gap: 0.2rem;
    border-radius: 5px;
}

.filters button {
    font-size: 1.1rem;
    padding: 0.1rem 0.2rem;
    background-color: transparent;
    border: none;
    color: #C3C4C4;
    cursor: pointer;
}


.filters button.current {
    color: white;
}

.count {
    margin-top: 2rem;
    margin-bottom: 2rem;
    font-size: 1.2rem;
}

.cards {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(30rem, 1fr));
    gap: 0.5rem;
}

.cards .card {
    display: flex;
    gap: 0.5rem;
    height: 15rem;
    background-color: #F0F1F2;
    align-items: start;
    padding: 0.5rem 1rem 0.5rem 0.5rem;
    overflow: hidden;
    border-radius: 5px;
}

.card .title {
    font-size: 1rem;
}

.card .description {
    font-size: 0.9rem;
    line-height: 1.25rem;
}

.card .content {
    position: relative;
    height: 100%;
    overflow: hidden;
}

.card .content::after {
    display: block;
    position: absolute;
    bottom: 0;
    width: 100%;
    content: "";
    background: linear-gradient(rgb(255 255 255/0), rgb(240 241 242));
    height: 1.5rem;
    left: 0;
}

.card .cover {
    min-width: 25%;
    max-width: 150px;
    height: auto;
    border-radius: 10px;
}


.card .content {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    gap: 0.3rem;
}

.card .info {
    display: flex;
    align-items: center;
    gap: 1rem;
    font-size: 0.9rem;
}

.card .info img {
    width: 1rem;
    height: auto;
}

.info div {
    display: flex;
    align-items: center;
    gap: 0.3rem;
}

button.new-manga:not(.selected):hover,
.home-anchor:not(.selected):hover {
    background-color: #E9EAEB;
}

form {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.required-p {
    background-color: var(--mangadex-orange);
    color: white;
    font-size: 1.1rem;
    text-align: center;
    padding: 0.7rem;
    border-radius: 5px;
}

.field {
    display: flex;
    flex-direction: column;
    margin-top: 0.5rem;
    gap: 0.5rem;
}

.field label {
    font-size: 1.1rem;
    font-weight: 500;
    width: max-content;
}

.field label.required::after {
    content: "*";
    color: red;
}

.field input,
.field textarea {
    padding: 0.5rem;
    background-color: #F0F1F2;
    border: 1px solid transparent;
    border-radius: 5px;
}

.field input:focus,
.field textarea:focus {
    outline-color: var(--mangadex-orange);
}

.field input:not(:placeholder-shown):invalid,
.field textarea:not(:placeholder-shown):invalid {
    border: 1px solid red;
}

.field:has(input[type="checkbox"]) {
    flex-direction: row-reverse;
    justify-content: flex-end;
    align-items: center;
}

.field:has(input[type="checkbox"]) label {
    font-weight: normal;
    font-size: 1rem;
}

.field input[type="checkbox"] {
    position: relative;
    appearance: none;
    width: 1.5rem;
    height: 1.5rem;
    border: 0.1rem solid black;
    background-color: white;
    display: grid;
    place-content: center;
}

.field input[type="checkbox"]::before {
    content: "";
    width: 1rem;
    height: 1rem;
    box-shadow: inset 1em 1em var(--mangadex-orange);
    display: none;
}

.field input[type="checkbox"]:checked::before {
    display: block;
    transform-origin: bottom left;
    clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);
}

form button {
    margin: 1rem 0;
    width: max-content;
    align-self: center;
    background-color: var(--mangadex-orange);
    color: white;
    font-weight: 500;
    padding: 0.7rem 4rem;
    border: none;
    font-size: 1.2rem;
    border-radius: 5px;
    text-align: center;
    cursor: pointer;
}

form button:hover {
    background-color: var(--mangadex-orange-darker);
}

form button:active {
    background-color: var(--mangadex-orange-darkest);
}

.controls {
    display: flex;
    align-items: center;
    gap: 1rem;
    font-size: 0.8rem;
}

.controls button {
    border: none;
    padding: 0.2rem 0.6rem;
    border-radius: 5px;
}

.controls .read {
    background-color: rgb(233, 234, 235);
}

.controls .read:hover {
    background-color: rgb(223, 224, 225);
}

.controls .read:active {
    background-color: rgb(213, 214, 215);
}

.controls .remove {
    background-color: var(--mangadex-orange);
    color: white;
    font-weight: 500;
}

.controls .remove:hover {
    background-color: var(--mangadex-orange-darker);
}

.controls .remove:active {
    background-color: var(--mangadex-orange-darkest);
}